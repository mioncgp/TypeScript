[{"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/index.tsx":"1","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/reportWebVitals.ts":"2","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/App.tsx":"3","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/styles.ts":"4","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/Column.tsx":"5","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/Card.tsx":"6","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/AddNewItem.tsx":"7","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/NewItemForm.tsx":"8","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/useUtils.ts":"9","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/AppStateContext.tsx":"10","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/arrayUtils.ts":"11"},{"size":273,"mtime":1611644810507,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1611291169243,"results":"14","hashOfConfig":"13"},{"size":606,"mtime":1611720041648,"results":"15","hashOfConfig":"13"},{"size":1699,"mtime":1611552489166,"results":"16","hashOfConfig":"13"},{"size":804,"mtime":1611719218881,"results":"17","hashOfConfig":"13"},{"size":207,"mtime":1611550999239,"results":"18","hashOfConfig":"13"},{"size":685,"mtime":1611555627279,"results":"19","hashOfConfig":"13"},{"size":800,"mtime":1611555433775,"results":"20","hashOfConfig":"13"},{"size":194,"mtime":1611553651406,"results":"21","hashOfConfig":"13"},{"size":2294,"mtime":1611716825850,"results":"22","hashOfConfig":"13"},{"size":412,"mtime":1611716939302,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"lzf050",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/index.tsx",[],["49","50"],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/reportWebVitals.ts",[],["51","52"],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/App.tsx",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/styles.ts",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/Column.tsx",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/Card.tsx",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/AddNewItem.tsx",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/NewItemForm.tsx",["53"],"import React, { useState } from \"react\";\nimport { NewItemFormContainer, NewItemButton, NewItemInput } from \"./st\\\nyles\";\nimport { useFocus } from \"./useUtils\";\n\ninterface NewItemFormProps {\n  onAdd(text: string): void;\n}\n\nexport const NewItemForm = ({ onAdd }: NewItemFormProps) => {\n  const [text, setText] = useState(\"\");\n  const inputRef = useFocus();\n\n  const handleAddText = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      onAdd(text);\n    }\n  };\n\n  return (\n    <NewItemFormContainer>\n      <NewItemInput\n        ref={inputRef}\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        onKeyPress={handleAddText}\n      />\n      <NewItemButton onClick={() => onAdd(text)}>Create</NewItemButton>\n    </NewItemFormContainer>\n  );\n};\n","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/useUtils.ts",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/AppStateContext.tsx",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/arrayUtils.ts",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":67,"nodeType":"62","messageId":"63","endLine":3,"endColumn":6},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","no-global-assign","no-unsafe-negation"]