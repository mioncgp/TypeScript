[{"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/index.tsx":"1","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/reportWebVitals.ts":"2","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/App.tsx":"3","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/styles.ts":"4","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/Column.tsx":"5","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/Card.tsx":"6","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/AddNewItem.tsx":"7","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/NewItemForm.tsx":"8","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/useUtils.ts":"9","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/AppStateContext.tsx":"10","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/arrayUtils.ts":"11"},{"size":273,"mtime":1611644810507,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1611291169243,"results":"14","hashOfConfig":"13"},{"size":949,"mtime":1611645793980,"results":"15","hashOfConfig":"13"},{"size":1699,"mtime":1611552489166,"results":"16","hashOfConfig":"13"},{"size":552,"mtime":1611644955093,"results":"17","hashOfConfig":"13"},{"size":207,"mtime":1611550999239,"results":"18","hashOfConfig":"13"},{"size":685,"mtime":1611555627279,"results":"19","hashOfConfig":"13"},{"size":800,"mtime":1611555433775,"results":"20","hashOfConfig":"13"},{"size":194,"mtime":1611553651406,"results":"21","hashOfConfig":"13"},{"size":2028,"mtime":1611651272014,"results":"22","hashOfConfig":"13"},{"size":183,"mtime":1611651351590,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"lzf050",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/index.tsx",[],["50","51"],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/reportWebVitals.ts",[],["52","53"],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/App.tsx",["54","55","56"],"import React, { useReducer } from \"react\";\nimport { Column } from \"./Column\";\nimport { Card } from \"./Card\";\nimport { AppContainer } from \"./styles\";\nimport { AddNewItem } from \"./AddNewItem\";\nimport { useAppState } from \"./AppStateContext\";\n\ninterface State {\n  count: number;\n}\n\ntype Action =\n  | {\n      type: \"increment\";\n    }\n  | {\n      type: \"decrement\";\n    };\n\nconst counterReducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case \"increment\":\n      return { count: state.count + 1 };\n    case \"decrement\":\n      return { count: state.count - 1 };\n    default:\n      throw new Error();\n  }\n};\n\nconst App = () => {\n  const { state } = useAppState();\n\n  return (\n    <AppContainer>\n      {state.lists.map((list, i) => (\n        <Column text={list.text} key={list.id} index={i} />\n      ))}\n      <AddNewItem toggleButtonText=\"+ Add another list\" onAdd={console.log} />\n    </AppContainer>\n  );\n};\n\nexport default App;\n","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/styles.ts",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/Column.tsx",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/Card.tsx",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/AddNewItem.tsx",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/NewItemForm.tsx",["57"],"import React, { useState } from \"react\";\nimport { NewItemFormContainer, NewItemButton, NewItemInput } from \"./st\\\nyles\";\nimport { useFocus } from \"./useUtils\";\n\ninterface NewItemFormProps {\n  onAdd(text: string): void;\n}\n\nexport const NewItemForm = ({ onAdd }: NewItemFormProps) => {\n  const [text, setText] = useState(\"\");\n  const inputRef = useFocus();\n\n  const handleAddText = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      onAdd(text);\n    }\n  };\n\n  return (\n    <NewItemFormContainer>\n      <NewItemInput\n        ref={inputRef}\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        onKeyPress={handleAddText}\n      />\n      <NewItemButton onClick={() => onAdd(text)}>Create</NewItemButton>\n    </NewItemFormContainer>\n  );\n};\n","/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/useUtils.ts",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/AppStateContext.tsx",[],"/home/mike/Desktop/TypeScript/TypeScirpt/trello-clone/src/arrayUtils.ts",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"62"},{"ruleId":"60","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":27},{"ruleId":"64","severity":1,"message":"68","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":14},{"ruleId":"64","severity":1,"message":"69","line":20,"column":7,"nodeType":"66","messageId":"67","endLine":20,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":2,"column":67,"nodeType":"72","messageId":"73","endLine":3,"endColumn":6},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],["74"],["75"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'counterReducer' is assigned a value but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","no-global-assign","no-unsafe-negation"]